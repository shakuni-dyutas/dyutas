services:
  web:
    depends_on:
    # each app container's network config should be ready before nginx starts
      - auth-app
      # - game-app
      # - ai-app
      # - stat-app
      # - socket-app
      - fe-app
    image: nginx:1.28
    container_name: dyutas-web
    ports:
      - ${WEB_HOST_PORT}:${WEB_TLS_PORT}
    networks:
      - dyutas-network
    volumes:
      - ./dev_env/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./dev_env/nginx_templates:/etc/nginx/templates:ro
      - ./dev_env/certs:/etc/nginx/certs:ro
    environment:
      - WEB_HOST_PORT=${WEB_HOST_PORT}
      - WEB_TLS_CERT_FILENAME=${WEB_TLS_CERT_FILENAME}
      - WEB_TLS_KEY_FILENAME=${WEB_TLS_KEY_FILENAME}
      - WEB_TLS_PORT=${WEB_TLS_PORT}
      - AUTH_APP_PORT=${AUTH_APP_PORT}
      - AUTH_RDB_PORT=${AUTH_RDB_PORT}
      - FE_APP_PORT=${FE_APP_PORT}
      - API_DOCS_PORT=${API_DOCS_PORT}
    command: [nginx-debug, '-g', 'daemon off;']
  api-docs:
    depends_on:
      - auth-app
    image: swaggerapi/swagger-ui:latest
    networks:
      - dyutas-network
    environment:
      - SUPPORTED_SUBMIT_METHODS=["get", "put", "post", "delete", "options", "head", "patch", "trace"]
      - URLS=[{url:"/auth/v1/openapi", name:"Auth Service"}]
  auth-app:
    build: ${AUTH_DOCKERFILE_PATH}
    networks:
      - dyutas-network
    depends_on:
      auth-rdb:
        condition: service_healthy
        restart: true
    environment:
      - AUTH_APP_PORT=${AUTH_APP_PORT}
      - AUTH_RDB_HOST=${AUTH_RDB_HOST}
      - AUTH_RDB_PORT=${AUTH_RDB_PORT}
      - AUTH_RDB_DB=${AUTH_RDB_DB}
      - AUTH_RDB_USER=${AUTH_RDB_USER}
      - AUTH_RDB_PASSWORD=${AUTH_RDB_PASSWORD}
      - AUTH_APP_JWT_KEY=${AUTH_APP_JWT_KEY}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
  auth-rdb:
    image: postgres:18
    restart: always
    volumes:
      - type: volume
        source: auth-rdb-volume
        target: /var/lib/postgresql
      - ${AUTH_RDB_INIT_PATH}:/docker-entrypoint-initdb.d:ro
    ports:
      - ${AUTH_RDB_PORT}:${AUTH_RDB_PORT}
    networks:
      - dyutas-network
    environment:
      POSTGRES_DB: ${AUTH_RDB_DB}
      POSTGRES_PASSWORD: ${AUTH_RDB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${AUTH_RDB_USER} -d ${AUTH_RDB_DB} -p ${AUTH_RDB_PORT}"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s
    command: ["-c", "port=${AUTH_RDB_PORT}"]
  fe-app:
    build: ${FE_DOCKERFILE_PATH}
    networks:
      - dyutas-network
        
networks:
  dyutas-network:
    driver: bridge

volumes:
  auth-rdb-volume:
    driver: local

